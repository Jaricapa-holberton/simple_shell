(command)[echo "/bin/ls
     /bin/ls
/bin/ls
   /bin/ls     " | ./hsh]

[GOT]:
(stdout)[AUTHORS
README.md
allowed_functions
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
AUTHORS
README.md
allowed_functions
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
AUTHORS
README.md
allowed_functions
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
AUTHORS
README.md
allowed_functions
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
](Length: 1016)
(stderr)[readline: Inappropriate ioctl for device
](Length: 41)
(status)[1]

[EXPECTED]:
(stdout)[allowed_functions
AUTHORS
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
README.md
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
allowed_functions
AUTHORS
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
README.md
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
allowed_functions
AUTHORS
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
README.md
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
allowed_functions
AUTHORS
bin_ls_spaces.bash
checker.bash
holberton.h
hsh
main.c
man_1_simple_shell
README.md
shell_builtins.c
shell_environ.c
shell_execute.c
shell_launch.c
shell_loop.c
shell_read_line.c
shell_split_line.c
shell_tools1.c
shell_tools2.c
](Length: 1016)
(stderr)[](Length: 0)
(status)[0]

Environment:
HOSTNAME=3eaf570a61b5
LC_ALL=en_US.UTF-8
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PWD=/tmp/correction/6364395002546880575715209466819833540489_2/235/2566
LANG=en_US.UTF-8
HOME=/root
SHLVL=2
LANGUAGE=en_US:en
_=/usr/bin/env
[VALGRIND]:
==1050== Memcheck, a memory error detector
==1050== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1050== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==1050== Command: ./hsh
==1050== Parent PID: 1047
==1050== 
==1050== Conditional jump or move depends on uninitialised value(s)
==1050==    at 0x40118D: shell_read_line (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1050==    by 0x40109A: shell_loop (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1050==    by 0x400977: main (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1050== 
==1050== 
==1050== HEAP SUMMARY:
==1050==     in use at exit: 120 bytes in 1 blocks
==1050==   total heap usage: 9 allocs, 8 frees, 960 bytes allocated
==1050== 
==1050== LEAK SUMMARY:
==1050==    definitely lost: 0 bytes in 0 blocks
==1050==    indirectly lost: 0 bytes in 0 blocks
==1050==      possibly lost: 0 bytes in 0 blocks
==1050==    still reachable: 120 bytes in 1 blocks
==1050==         suppressed: 0 bytes in 0 blocks
==1050== Rerun with --leak-check=full to see details of leaked memory
==1050== 
==1050== For counts of detected and suppressed errors, rerun with: -v
==1050== Use --track-origins=yes to see where uninitialised values come from
==1050== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

