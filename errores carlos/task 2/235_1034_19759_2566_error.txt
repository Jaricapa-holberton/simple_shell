(command)[echo "                " | ./hsh]

[GOT]:
(stdout)[](Length: 0)
(stderr)[readline: Inappropriate ioctl for device
](Length: 41)
(status)[1]

[EXPECTED]:
(stdout)[](Length: 0)
(stderr)[](Length: 0)
(status)[0]

Environment:
HOSTNAME=3eaf570a61b5
LC_ALL=en_US.UTF-8
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PWD=/tmp/correction/6364395002546880575715209466819833540489_2/235/2566
LANG=en_US.UTF-8
HOME=/root
SHLVL=2
LANGUAGE=en_US:en
_=/usr/bin/env
[VALGRIND]:
==1796== Memcheck, a memory error detector
==1796== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1796== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==1796== Command: ./hsh
==1796== Parent PID: 1793
==1796== 
==1796== Conditional jump or move depends on uninitialised value(s)
==1796==    at 0x40118D: shell_read_line (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1796==    by 0x40109A: shell_loop (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1796==    by 0x400977: main (in /tmp/correction/6364395002546880575715209466819833540489_2/235/2566/hsh)
==1796== 
==1796== 
==1796== HEAP SUMMARY:
==1796==     in use at exit: 120 bytes in 1 blocks
==1796==   total heap usage: 3 allocs, 2 frees, 376 bytes allocated
==1796== 
==1796== LEAK SUMMARY:
==1796==    definitely lost: 0 bytes in 0 blocks
==1796==    indirectly lost: 0 bytes in 0 blocks
==1796==      possibly lost: 0 bytes in 0 blocks
==1796==    still reachable: 120 bytes in 1 blocks
==1796==         suppressed: 0 bytes in 0 blocks
==1796== Rerun with --leak-check=full to see details of leaked memory
==1796== 
==1796== For counts of detected and suppressed errors, rerun with: -v
==1796== Use --track-origins=yes to see where uninitialised values come from
==1796== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

